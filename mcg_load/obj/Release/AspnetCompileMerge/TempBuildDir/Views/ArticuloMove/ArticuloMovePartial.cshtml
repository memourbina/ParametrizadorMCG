@using System.Web.UI.WebControls
@using mcg_load.Code.Helpers
@model List<mcg_load.Models.CArticuloMov>

@{
    var gridView = Html.DevExpress().GridView<mcg_load.Esc_Articulos>(gridViewSettings =>
    {
        gridViewSettings.Name = "gridView";
        gridViewSettings.KeyFieldName = "id_articulo;id_escenario";

        gridViewSettings.CallbackRouteValues = new
        {
            Controller = "ArticuloMove",
            Action = "ArticuloMovePartial"
        };
        gridViewSettings.CustomActionRouteValues = new { Controller = "ArticuloMove", Action = "ArticuloMoveCustomActionPartial" };
        gridViewSettings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ArticuloMove", Action = "ArticuloMoveAddNewPartial" };
        gridViewSettings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ArticuloMove", Action = "ArticuloMoveUpdatePartial" };

        gridViewSettings.EnablePagingGestures = AutoBoolean.False;

        gridViewSettings.ControlStyle.CssClass = "grid-view";
        gridViewSettings.Width = Unit.Percentage(100);

        gridViewSettings.Styles.Cell.Wrap = DefaultBoolean.False;
        gridViewSettings.Styles.PagerBottomPanel.CssClass = "pager";
        gridViewSettings.Styles.FocusedRow.CssClass = "focused";

        gridViewSettings.SettingsBehavior.AllowFocusedRow = true;
        gridViewSettings.SettingsBehavior.AllowSelectByRowClick = true;
        gridViewSettings.SettingsBehavior.AllowEllipsisInText = true;
        gridViewSettings.SettingsBehavior.AllowDragDrop = false;
        gridViewSettings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

        gridViewSettings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        gridViewSettings.SettingsEditing.EditFormColumnCount = 2;

        gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

        gridViewSettings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        gridViewSettings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        gridViewSettings.Settings.ShowHeaderFilterButton = true;

        gridViewSettings.SettingsPager.PageSize = 25;
        gridViewSettings.SettingsPager.EnableAdaptivity = true;
        gridViewSettings.SettingsPager.PageSizeItemSettings.Visible = true;

        gridViewSettings.SettingsExport.EnableClientSideExportAPI = true;
        gridViewSettings.SettingsExport.ExportSelectedRowsOnly = true;

        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;

        gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
        gridViewSettings.EditFormLayoutProperties.ColCount = 2;

        //gridViewSettings.EditFormLayoutProperties.Items.Add("id_articulo");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("id_escenario");
        gridViewSettings.EditFormLayoutProperties.Items.Add("Planta01");
        gridViewSettings.EditFormLayoutProperties.Items.Add("Linea");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Org__ID");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Escenario");
        gridViewSettings.EditFormLayoutProperties.Items.Add("Probabilidad");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Línea_Moldeo");
        gridViewSettings.EditFormLayoutProperties.Items.Add("Cliente");
        gridViewSettings.EditFormLayoutProperties.Items.Add("Customer_Name");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Industria");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Tipo_Pieza");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Description");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("No__Oracle");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Customer_PN");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Unit_Weight");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Mercado");SettingsBehavior
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Tipo_de_Hierro");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Grado_de_Hierro");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("OEM");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Plataforma");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Sistema");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Cavs____Soplo");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Soplos___Hora");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Cor___pza");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("Maquina");

        gridViewSettings.EditFormLayoutProperties.Items.Add("fecha_start");
        //gridViewSettings.EditFormLayoutProperties.Items.Add("fecha_end");
        gridViewSettings.EditFormLayoutProperties.Items.Add("tipo_traslado");
        gridViewSettings.EditFormLayoutProperties.Items.Add("Cantidad");

        gridViewSettings.EditFormLayoutProperties.Items.AddCommandItem(itemSettings =>
        {
            itemSettings.ColumnSpan = 2;
            itemSettings.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        });

        gridViewSettings.CommandColumn.Visible = true;
        gridViewSettings.CommandColumn.ShowSelectCheckbox = true;
        gridViewSettings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        gridViewSettings.CommandColumn.VisibleIndex = 0;
        gridViewSettings.CommandColumn.Width = Unit.Pixel(52);

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "id_articulo";
            columnSettings.Caption = "ID";
            columnSettings.Width = Unit.Pixel(50);
            columnSettings.SetDataItemTemplateContent(c =>
            {
                if (Convert.ToInt32(DataBinder.Eval(c.DataItem, "id_articulo")) != 0)
                    ViewContext.Writer.Write(string.Format("<span class='votes-column'>{0}</span>", DataBinder.Eval(c.DataItem, "id_articulo")));
            });
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Description";
            columnSettings.Caption = "Description";
            columnSettings.Width = Unit.Pixel(200);
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "id_escenario";
            columnSettings.Caption = "id_escenario";
            columnSettings.Width = Unit.Pixel(80);
            columnSettings.Visible = false;
            columnSettings.SetDataItemTemplateContent(c =>
            {
                if (Convert.ToInt32(DataBinder.Eval(c.DataItem, "id_escenario")) != 0)
                    ViewContext.Writer.Write(string.Format("<span class='votes-column'>{0}</span>", DataBinder.Eval(c.DataItem, "id_escenario")));
            });
        });

        gridViewSettings.Columns.Add(m => m.Planta01, columnSettings =>
        {
            columnSettings.Caption = "Planta";
            columnSettings.Width = Unit.Pixel(150);
            columnSettings.EditorProperties().ComboBox(p =>
            {
                p.TextField = "Nombre";
                p.ValueField = "Planta";
                p.ValueType = typeof(string);
                p.ClientSideEvents.SelectedIndexChanged = "OnSelectedPlantaChanged";
                p.BindList(ArticuloHelper.GetCatPlantasList());
            });
        });

        gridViewSettings.Columns.Add(m => m.Linea, column =>
        {
            column.Caption = "Linea";
            column.EditorProperties().ComboBox(p =>
            {
                p.CallbackRouteValues = new { Controller = "Articulo", Action = "GetLineas" };
                p.ValueField = "Linea";
                p.TextField = "Linea";
                p.ValueType = typeof(string);
                p.ClientSideEvents.BeginCallback = "LineaComboBox_BeginCallback";
                p.ClientSideEvents.EndCallback = "LineaComboBox_EndCallback";
                p.BindList(ArticuloHelper.GetEscLineasList());
            });
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Org__ID";
            columnSettings.Caption = "Org. ID";
            columnSettings.Width = Unit.Pixel(80);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Escenario";
            columnSettings.Caption = "Escenario";
            columnSettings.Width = Unit.Pixel(100);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Probabilidad";
            columnSettings.Caption = "Probabilidad";
            columnSettings.Width = Unit.Pixel(100);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Línea_Moldeo";
            columnSettings.Caption = "Línea Moldeo";
            columnSettings.Width = Unit.Pixel(150);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Cliente";
            columnSettings.Caption = "Cliente";
            columnSettings.Width = Unit.Pixel(120);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Customer_Name";
            columnSettings.Caption = "Customer Name";
            columnSettings.Width = Unit.Pixel(150);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Industria";
            columnSettings.Caption = "Industria";
            columnSettings.Width = Unit.Pixel(120);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Tipo_Pieza";
            columnSettings.Caption = "Tipo Pieza";
            columnSettings.Width = Unit.Pixel(110);
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "No__Oracle";
            columnSettings.Caption = "No# Oracle";
            columnSettings.Width = Unit.Pixel(100);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Customer_PN";
            columnSettings.Caption = "Customer PN";
            columnSettings.Width = Unit.Pixel(120);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Unit_Weight";
            columnSettings.Caption = "Unit Weight";
            columnSettings.Width = Unit.Pixel(100);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Mercado";
            columnSettings.Caption = "Mercado";
            columnSettings.Width = Unit.Pixel(80);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Tipo_de_Hierro";
            columnSettings.Caption = "Tipo de Hierro";
            columnSettings.Width = Unit.Pixel(80);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Grado_de_Hierro";
            columnSettings.Caption = "Grado de Hierro";
            columnSettings.Width = Unit.Pixel(80);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OEM";
            columnSettings.Caption = "OEM";
            columnSettings.Width = Unit.Pixel(80);
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Plataforma";
            columnSettings.Caption = "Plataforma";
            columnSettings.Width = Unit.Pixel(80);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Sistema";
            columnSettings.Caption = "Sistema";
            columnSettings.Width = Unit.Pixel(80);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Cavs____Soplo";
            columnSettings.Caption = "Cavs/Soplo";
            columnSettings.Width = Unit.Pixel(80);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Soplos___Hora";
            columnSettings.Caption = "Soplos/Hora";
            columnSettings.Width = Unit.Pixel(80);
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Cor___pza";
            columnSettings.Caption = "Cor / pza";
            columnSettings.Width = Unit.Pixel(80);
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Maquina";
            columnSettings.Caption = "Maquina";
            columnSettings.Width = Unit.Pixel(180);
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "fecha_start";
            columnSettings.Caption = "Fecha desde";
            columnSettings.Width = Unit.Pixel(180);
            columnSettings.Visible = false;

            columnSettings.EditorProperties().DateEdit(p =>
            {
                p.TimeSectionProperties.Visible = true;
                p.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;

                p.TimeSectionProperties.TimeEditProperties.EditFormatString = "dd.MM.yyyy hh:mm";

            });

        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "fecha_end";
            columnSettings.Caption = "fecha_end";
            columnSettings.Width = Unit.Pixel(180);
            columnSettings.Visible = false;
            columnSettings.EditorProperties().DateEdit(p =>
            {
                p.TimeSectionProperties.Visible = true;
                p.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.DateTime;

                p.TimeSectionProperties.TimeEditProperties.EditFormatString = "dd.MM.yyyy hh:mm";

            });

        });


        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "tipo_traslado";
            columnSettings.Caption = "Tipo Traslado";
            columnSettings.Width = Unit.Pixel(180);
            columnSettings.Visible = false;
            columnSettings.EditorProperties().ComboBox(comboBoxProperties =>
            {
                comboBoxProperties.ShowImageInEditBox = true;
                comboBoxProperties.ItemImage.Width = 12;
                comboBoxProperties.ItemImage.Height = 12;
                comboBoxProperties.Items.Add("Copia", 1, "Content/Images/kind1.svg");
                comboBoxProperties.Items.Add("Total", 2, "Content/Images/kind2.svg");
                comboBoxProperties.Items.Add("Porcentaje", 3, "Content/Images/kind2.svg");
                comboBoxProperties.Items.Add("Cantidad", 4, "Content/Images/kind2.svg");

            });

        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Cantidad";
            columnSettings.Caption = "Cantidad";
            columnSettings.Width = Unit.Pixel(180);
            columnSettings.Visible = false;
        });

        gridViewSettings.CellEditorInitialize = (sender, e) =>
        {
            MVCxGridView grid = sender as MVCxGridView;
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;

            if (grid.IsEditing && e.Column.FieldName == "Linea")
            {
                MVCxComboBox comboboxCity = e.Editor as MVCxComboBox;
                var currentPlanta = grid.GetRowValues(e.VisibleIndex, "Planta");
                if (e.KeyValue != DBNull.Value && e.KeyValue != null && currentPlanta != null && currentPlanta != DBNull.Value)
                {
                    comboboxCity.DataSource = ArticuloHelper.GetEscLineasList(Convert.ToString(currentPlanta));
                    comboboxCity.DataBindItems();
                }
                else
                {
                    comboboxCity.DataSource = null;
                    comboboxCity.Items.Clear();
                }
            }
        };


        gridViewSettings.ClientSideEvents.Init = "onGridViewInit";
        gridViewSettings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChanged";
        gridViewSettings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";

        gridViewSettings.InitNewRow += (s, e) => { e.NewValues["id_escenario"] = -1; };
        gridViewSettings.CellEditorInitialize = (s, e) => { ((ASPxEdit)e.Editor).ValidationSettings.Display = Display.Dynamic; };
    });
    if (ViewBag.GeneralError != null)
    {
        gridView.SetEditErrorText(ViewBag.GeneralError);
    }
}

@gridView.Bind(Model).GetHtml()